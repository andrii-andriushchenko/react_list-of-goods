{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleSortType","type","setState","reverse","reset","this","reorderedGoods","goods","visibleGoods","ALPHABET","sort","g1","g2","localeCompare","LENGTH","length","getReorderedGoods","className","cn","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEJ,SAAUG,KAP9B,EAUEE,QAAU,kBACR,EAAKD,UAAS,SAACN,GAAD,MAAY,CAAEC,YAAaD,EAAMC,gBAXnD,EAcEO,MAAQ,WACN,EAAKF,SAAS,CAAEL,YAAY,EAAOC,SAAUL,EAASM,QAf1D,4CAkBE,WAAU,IAAD,OACP,EAAiCM,KAAKT,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZS,EAnDH,SACLC,EADK,GAGJ,IADCT,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOD,GAEzB,OAAQT,GACN,KAAML,EAASgB,SACbD,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAC/C,MAEF,KAAMnB,EAASqB,OACbN,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGI,OAASH,EAAGG,UAWjD,OAJIlB,GACFW,EAAaL,UAGRK,EA4BkBQ,CAAkBtB,EAAiBW,KAAKT,OAE/D,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEhB,KAAK,SACLgB,UAAWC,IAAG,iBACZ,CAAE,WAAYpB,IAAaL,EAASgB,WACtCU,QAAS,WACP,EAAKnB,eAAeP,EAASgB,WALjC,iCAWA,wBACER,KAAK,SACLgB,UAAWC,IAAG,oBACZ,CAAE,WAAYpB,IAAaL,EAASqB,SACtCK,QAAS,WACP,EAAKnB,eAAeP,EAASqB,SALjC,4BAWA,wBACEb,KAAK,SACLgB,UAAWC,IAAG,oBAAqB,CAAE,YAAarB,IAClDsB,QAASd,KAAKF,QAHhB,sBAQEN,GAAcC,IAAaL,EAASM,OACpC,wBACEE,KAAK,SACLgB,UAAU,4BACVE,QAASd,KAAKD,MAHhB,sBAUJ,6BACGE,EAAec,KAAI,SAACC,GAAD,OAClB,oBACE,UAAQ,OADV,SAIGA,GAFIA,eAtEnB,GAAyBC,aCzDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6bf127e9.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case (SortType.ALPHABET):\n      visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n      break;\n\n    case (SortType.LENGTH):\n      visibleGoods.sort((g1, g2) => g1.length - g2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSortType = (type: SortType) => {\n    this.setState({ sortType: type });\n  };\n\n  reverse = () => (\n    this.setState((state) => ({ isReversed: !state.isReversed }))\n  );\n\n  reset = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const reorderedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn('button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET })}\n            onClick={() => {\n              this.handleSortType(SortType.ALPHABET);\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-success',\n              { 'is-light': sortType !== SortType.LENGTH })}\n            onClick={() => {\n              this.handleSortType(SortType.LENGTH);\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-warning', { 'is-light': !isReversed })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {reorderedGoods.map((good) => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}